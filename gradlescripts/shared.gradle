
/*
 * Copyright 2020 Oscar David Gallon Rosero
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *
 */
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs.kotlin'

apply from: "$rootProject.projectDir/gradlescripts/ktlint.gradle"
apply from: "$rootProject.projectDir/gradlescripts/signing.gradle"
apply from: "$rootProject.projectDir/gradlescripts/tests.gradle.kts"

android {
    compileSdkVersion appCompileSdkVersion

    defaultConfig {
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "com.oscarg798.amiibowiki.testutils.testrunner.UITestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        staging {
            manifestPlaceholders = [appName: "AmiiboWiki-Alpha"]
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding false
    }

    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/licenses/ASM'
        exclude 'META-INF/metadata.jvm.kotlin_module'
        exclude 'kotlin/coroutines/coroutines.kotlin_builtins'
        exclude 'META-INF/descriptors.kotlin_module'
        exclude 'META-INF/metadata.kotlin_module'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        freeCompilerArgs = ["-Xallow-result-return-type", "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi", "-Xopt-in=kotlinx.coroutines.FlowPreview", "-Xopt-in=kotlin.contracts.ExperimentalContracts"]
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation(kotlinJDK)

    implementation appCompat
    implementation recyclerView
    implementation design
    implementation appCompatV4
    implementation constraintLayout
    implementation multidex
    implementation activityx

    implementation airbnb
    kapt airbnbProcessor

    implementation facebookShimmer

    //Dagger
    implementation dagger
    kapt daggerCompiler
    implementation hiltLib

    //Coroutines
    implementation kotlinCoroutines
    implementation kotlinCoroutinesAndroid

    implementation retrofit
    implementation gsonConverter
    implementation okhttp3
    implementation okhttpLoggingInterceptor

    implementation viewModelScope
    implementation lifecycleExtensions
    implementation lifecycle

    implementation skeleton
    implementation shimmerLayout

    implementation(lomeno)

    implementation flagly

    implementation firebaseAnalytics

    implementation fragmentNavigation
    implementation navigationUi
    implementation fragmentNavigationKtx
    implementation navigationUiKtx

    implementation project(path: ':logger')
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    kapt project(':loggerprocessor')

    //Test
    testImplementation mockk
    testImplementation junit
    testImplementation kluent
    testImplementation kotlinCoroutinesTest

    //Aceptance Testing
    androidTestImplementation androidAnnotations
    androidTestImplementation mockWebServer
    androidTestImplementation testRunner
    androidTestImplementation testRules
    androidTestImplementation espressoCore
    androidTestImplementation espressoContrib
    androidTestImplementation espressoIntents
    androidTestImplementation uiAutomator
    androidTestImplementation mockkAndroid
    androidTestImplementation  appCompatV4
    
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.31-alpha'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.31-alpha'

    testImplementation project(path: ':testutils')
    androidTestImplementation project(path: ':testutils')
}
