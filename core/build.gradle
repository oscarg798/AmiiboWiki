/*
 * Copyright 2020 Oscar David Gallon Rosero
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *
 */
plugins {
    id('LibraryChargerPlugin')
}

android {
    compileSdkVersion appCompileSdkVersion

    defaultConfig {
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "com.oscarg798.amiibowiki.testutils.testrunner.UITestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding false
    }

    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/licenses/ASM'
        exclude 'META-INF/metadata.jvm.kotlin_module'
        exclude 'kotlin/coroutines/coroutines.kotlin_builtins'
        exclude 'META-INF/descriptors.kotlin_module'
        exclude 'META-INF/metadata.kotlin_module'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        freeCompilerArgs = ["-Xallow-result-return-type", "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi", "-Xopt-in=kotlinx.coroutines.FlowPreview", "-Xopt-in=kotlin.contracts.ExperimentalContracts"]
        jvmTarget = "1.8"
    }
}

dependencies {

    implementation facebookShimmer
    implementation shimmerLayout

    implementation(lomeno)

    implementation flagly

    implementation platform(firebase.boom)
    implementation firebaseAnalytics

    implementation project(path: ':logger')
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    kapt project(':loggerprocessor')

    androidTestImplementation daggerHilt.androidTesting
    kaptAndroidTest daggerHilt.compiler

    testImplementation project(path: ':testutils')
    androidTestImplementation project(path: ':testutils')

    implementation picasso
    implementation project(path: ':network')

    implementation mixpanel

    implementation firebaseAnalytics
    implementation firebaseRemoteConfig
    implementation zoomImageViewer


    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.21"
    implementation flagly
    implementation preference

}


charger {
    plugins = ["navigation"]
}